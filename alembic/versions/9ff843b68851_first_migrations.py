"""First Migrations

Revision ID: 9ff843b68851
Revises:
Create Date: 2025-04-12 22:37:27.125402

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "9ff843b68851"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "search_configs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("search_term", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("source_websites", sa.JSON(), nullable=True),
        sa.Column("frequency_days", sa.Integer(), nullable=True),
        sa.Column("preferred_time", sa.Time(), nullable=True),
        sa.Column("search_metadata", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_search_active", "search_configs", ["is_active"], unique=False)
    op.create_index("ix_search_term", "search_configs", ["search_term"], unique=False)
    op.create_table(
        "source_websites",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name",
            sa.String(length=20),
            nullable=True,
            comment="Website name (e.g., 'OLX', 'Enjoei')",
        ),
        sa.Column(
            "base_url", sa.String(), nullable=True, comment="Base URL for the website"
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            nullable=True,
            comment="Whether we're currently scraping this site",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index("ix_source_website_name", "source_websites", ["name"], unique=False)
    op.create_table(
        "products",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column(
            "source_product_code",
            sa.String(length=50),
            nullable=True,
            comment="Unique identifier from the source website (if available)",
        ),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column("state", sa.String(length=2), nullable=True),
        sa.Column(
            "condition",
            sa.Enum("NEW", "USED", "REFURBISHED", name="productcondition"),
            nullable=True,
        ),
        sa.Column("seller_type", sa.String(length=20), nullable=True),
        sa.Column("source", sa.String(length=20), nullable=True),
        sa.Column("is_available", sa.Boolean(), nullable=True),
        sa.Column("image_urls", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_notified_at", sa.DateTime(), nullable=True),
        sa.Column(
            "source_website_id",
            sa.Integer(),
            nullable=True,
            comment="Foreign key to source website configuration",
        ),
        sa.Column(
            "source_metadata",
            sa.JSON(),
            nullable=True,
            comment="Additional source-specific data in JSON format",
        ),
        sa.ForeignKeyConstraint(
            ["source_website_id"],
            ["source_websites.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_products_id"), "products", ["id"], unique=False)
    op.create_index(
        op.f("ix_products_source_product_code"),
        "products",
        ["source_product_code"],
        unique=False,
    )
    op.create_index(
        op.f("ix_products_source_website_id"),
        "products",
        ["source_website_id"],
        unique=False,
    )
    op.create_index(op.f("ix_products_title"), "products", ["title"], unique=False)
    op.create_index(op.f("ix_products_url"), "products", ["url"], unique=True)
    op.create_table(
        "price_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=True),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_price_history_product",
        "price_history",
        ["product_id", "created_at"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_price_history_product", table_name="price_history")
    op.drop_table("price_history")
    op.drop_index(op.f("ix_products_url"), table_name="products")
    op.drop_index(op.f("ix_products_title"), table_name="products")
    op.drop_index(op.f("ix_products_source_website_id"), table_name="products")
    op.drop_index(op.f("ix_products_source_product_code"), table_name="products")
    op.drop_index(op.f("ix_products_id"), table_name="products")
    op.drop_table("products")
    op.drop_index("ix_source_website_name", table_name="source_websites")
    op.drop_table("source_websites")
    op.drop_index("ix_search_term", table_name="search_configs")
    op.drop_index("ix_search_active", table_name="search_configs")
    op.drop_table("search_configs")
    # ### end Alembic commands ###
